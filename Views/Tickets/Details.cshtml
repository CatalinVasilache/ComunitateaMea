@model ComunitateaMea.Models.Ticket
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using ComunitateaMea.Authorization;

@{
    ViewData["Title"] = "Details";
}

<h3 style="margin-bottom: 15px; color: #1f6c5d;">Detalii</h3>

<div style="font-size: 20px; font-weight: 400; color: #1f6c5d; margin-top: 15px;">
    <hr />
    <div class="row" style="margin: 0; margin-top: 20px;">
        <dl class="row" style="width: 64%;">
            <dt class="col-sm-2">
                <strong>Titlu:</strong>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Title)
            </dd>
            <dt class="col-sm-2">
                <strong>Descriere:</strong>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                <strong>Comunitate:</strong>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.County)
            </dd>
            <dt class="col-sm-2">
                <strong>Situatie:</strong>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Status)
            </dd>
            <dt class="col-sm-2">
                <strong>Voturi:</strong>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Votes)
            </dd>
            <dt class="col-sm-2">
                <strong>Data publicarii:</strong>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PublishedDate)
            </dd>
        </dl>
        <div>
            <dd class="col-sm-10">
                @if (Model.ImageName != null)
                {
                    <img class="lazyload img1" src="@("~/image/" + Model.ImageName)" asp-append-version="true" />
                }
            </dd>
        </div>
    </div>
</div>

@if (Model.StatusApproval == TicketStatusApproval.Approved)
    @if (Model.Status == TicketStatus.Todo)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
User, Model, TicketOperations.InProgress)).Succeeded)
@if ((await AuthorizationService.AuthorizeAsync(
User, Model, TicketOperations.Done)).Succeeded)
@if ((await AuthorizationService.AuthorizeAsync(
User, Model, TicketOperations.NotPossible)).Succeeded)
{
    <form style="display:inline;" method="post">
        <input type="hidden" name="id" value="@Model.Id" />
        <input type="hidden" name="statusProgress" value="@TicketStatus.InProgress" />
        <button style="color: white; background-color: #5CDB95; border-color:#5CDB95;" type="submit" class="btn btn-xs btn-warning">In Lucru</button>
    </form>
    <form style="display:inline;" method="post">
        <input type="hidden" name="id" value="@Model.Id" />
        <input type="hidden" name="statusProgress" value="@TicketStatus.Done" />
        <button style="color: white; background-color: #379683; border-color:#379683;" type="submit" class="btn btn-xs btn-warning">Finalizat</button>
    </form>
    <form style="display:inline;" method="post">
        <input type="hidden" name="id" value="@Model.Id" />
        <input type="hidden" name="statusProgress" value="@TicketStatus.NotPossible" />
        <button style="color: white; background-color: #05386b; border-color:#05386b;" type="submit" class="btn btn-xs btn-warning">Imposibil</button>
    </form>
    <br />
}
}

    @if (Model.StatusApproval == TicketStatusApproval.Approved)
        @if (Model.Status == TicketStatus.InProgress)
        {

            @if ((await AuthorizationService.AuthorizeAsync(
 User, Model, TicketOperations.Done)).Succeeded)
@if ((await AuthorizationService.AuthorizeAsync(
User, Model, TicketOperations.NotPossible)).Succeeded)
{
    <form style="display:inline;" method="post">
        <input type="hidden" name="id" value="@Model.Id" />
        <input type="hidden" name="statusProgress" value="@TicketStatus.Done" />
        <button style="color: white; background-color: #379683; border-color:#379683;" type="submit" class="btn btn-xs btn-warning">Finalizat</button>
    </form>
    <form style="display:inline;" method="post">
        <input type="hidden" name="id" value="@Model.Id" />
        <input type="hidden" name="statusProgress" value="@TicketStatus.NotPossible" />
        <button style="color: white; background-color: #05386b; border-color:#05386b;" type="submit" class="btn btn-xs btn-warning">Imposibil</button>
    </form>
    <br />
}
}

        @if (Model.StatusApproval == TicketStatusApproval.Approved)
            @if (Model.Status == TicketStatus.Done)
            {
                @if ((await AuthorizationService.AuthorizeAsync(
      User, Model, TicketOperations.InProgress)).Succeeded)
    @if ((await AuthorizationService.AuthorizeAsync(
User, Model, TicketOperations.NotPossible)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="statusProgress" value="@TicketStatus.InProgress" />
            <button style="color: white; background-color: #5CDB95; border-color:#5CDB95;" type="submit" class="btn btn-xs btn-warning">In Lucru</button>
        </form>
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="statusProgress" value="@TicketStatus.NotPossible" />
            <button style="color: white; background-color: #05386b; border-color:#05386b;" type="submit" class="btn btn-xs btn-warning">Imposibil</button>
        </form>
        <br />
    }
}

            @if (Model.StatusApproval == TicketStatusApproval.Approved)
                @if (Model.Status == TicketStatus.NotPossible)
                {
                    @if ((await AuthorizationService.AuthorizeAsync(
          User, Model, TicketOperations.InProgress)).Succeeded)
        @if ((await AuthorizationService.AuthorizeAsync(
User, Model, TicketOperations.Done)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="status" value="@TicketStatus.InProgress" />
                <button style="color: white; background-color: #5CDB95; border-color: #5CD895" type="submit" class="btn btn-xs btn-warning">In Lucru</button>
            </form>
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="status" value="@TicketStatus.Done" />
                <button style="color: white; background-color: #379683; border-color: #379683;" type="submit" class="btn btn-xs btn-warning">Finalizat</button>
            </form>
            <br />
        }
    }
<br />

                @if (Model.StatusApproval != TicketStatusApproval.Rejected)
                {
                    @if ((await AuthorizationService.AuthorizeAsync(
       User, Model, TicketOperations.Reject)).Succeeded)
                    {
                        <form style="display:inline;" method="post">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <input type="hidden" name="status" value="@TicketStatusApproval.Rejected" />
                            <button type="submit" class="btn btn-xs btn-danger">Respinge</button>
                        </form>
                    }
                }

                @if (Model.StatusApproval != TicketStatusApproval.Approved)
                {
                    @if ((await AuthorizationService.AuthorizeAsync(
       User, Model, TicketOperations.Approve)).Succeeded)
                    {
                        <br />
                        <form style="display:inline;" method="post">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <input type="hidden" name="status" value="@TicketStatusApproval.Approved" />
                            <button type="submit" class="btn btn-xs btn-success">Accepta</button>
                        </form>
                        <br />
                    }
                }
<br />
                <div>
                    @if ((await AuthorizationService.AuthorizeAsync(
User, Model,
TicketOperations.Update)).Succeeded)
                    {
                        <a asp-action="Edit" asp-route-id="@Model.Id">Editeaza</a>
                        <text> | </text>
                    }
                    <a asp-action="Index">Intoarce-te la lista</a>
                </div>

                <style>
                    .img1 {
                        max-height: 500px;
                        max-width: 500px;
                    }
                </style>
